// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DataBrowser.Data
{

    // FieldConfiguration
    [Table("FieldConfiguration", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public partial class FieldConfiguration
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_FieldConfiguration", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"SourceTableName", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Source table name")]
        public string SourceTableName { get; set; } // SourceTableName (length: 50)

        [Column(@"SourceColumnName", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Source column name")]
        public string SourceColumnName { get; set; } // SourceColumnName (length: 50)

        [Column(@"ReferenceTableName", Order = 4, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Reference table name")]
        public string ReferenceTableName { get; set; } // ReferenceTableName (length: 50)

        [Column(@"ReferenceColumnName", Order = 5, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Reference column name")]
        public string ReferenceColumnName { get; set; } // ReferenceColumnName (length: 50)

        [Column(@"TableConfigId", Order = 6, TypeName = "int")]
        [Display(Name = "Table config ID")]
        public int? TableConfigId { get; set; } // TableConfigId

        // Reverse navigation

        /// <summary>
        /// Child FieldMappingConfigurations where [FieldMappingConfiguration].[FieldConfigurationId] point to this entity (FK_FieldMappingConfiguration_FieldConfiguration)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FieldMappingConfiguration> FieldMappingConfigurations { get; set; } = new System.Collections.Generic.List<FieldMappingConfiguration>(); // FieldMappingConfiguration.FK_FieldMappingConfiguration_FieldConfiguration

        // Foreign keys

        /// <summary>
        /// Parent TableConfiguration pointed by [FieldConfiguration].([TableConfigId]) (FK_FieldConfiguration_TableConfiguration)
        /// </summary>
        [ForeignKey("TableConfigId")] public virtual TableConfiguration TableConfiguration { get; set; } // FK_FieldConfiguration_TableConfiguration
    }

}
// </auto-generated>
